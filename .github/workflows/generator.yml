name: Tileset Generator
on:
  repository_dispatch:
    types: [nightly-release]
  workflow_dispatch: {}

jobs:
  generator:
    name: Generate the tileset
    runs-on: ubuntu-latest
    container:
      image: technologiestiftung/qtrees-vectortiles-generator-base:main
      credentials:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      env:
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_PORT: '5432'
        TILESET_DIR: /tilesets
        TILESET_NAME: trees.mbtiles
        TMP_DIR: /tmp
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
      # volumes:
      #     - /tilesets:/tilesets
    steps:
      - name: Create tilesetdir
        run: mkdir -p $TILESET_DIR
      - name: Checkout source repository
        uses: actions/checkout@v3
      - name: Run the generator
        id: generator
        run: |
          echo "Running the generator"
          ./generator.sh

      - name: Output path
        run: |
          echo "The path of the generated tileset is ${{ steps.generator.outputs.tileset_path }}"
      # - name: Upload artifact to s3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --acl public-read
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      #     SOURCE_DIR: ${{ steps.generator.outputs.tileset_path }}
      #     DEST_DIR: ./
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: tileset
          path: trees.mbtiles
          if-no-files-found: warn
      # add tmate action to debug
      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   # if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      #   timeout-minutes: 3
      #   with:
      #       limit-access-to-actor: true
      #   # now notify the render to use the new tileset
      #   # by downloading it and restarting the server
    #   - name: 'run render webhook'
    #     if: github.event_name == 'release' && github.event.action == 'published'
    #     run: |
    #       curl -X POST ${{ secrets.RENDER_WEBHOOK_URL }}
