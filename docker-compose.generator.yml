version: "3.9"
services:
  postgres:
    image: postgis/postgis:14-3.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  generator:
    build:
      context: .
      dockerfile: Dockerfile.test.generator
      # args:
      # - BASE_IMAGE=qtrees-vectortiles-generator-base:test
    container_name: qtrees-vectortiles-generator-base-generator
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - TILESETS_DIR=/tilesets
      - TILESET_NAME=trees.mbtiles
      - TMP_DIR=/tmp
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_S3_BUCKET=${AWS_BUCKET}
      - GITHUB_WORKSPACE=${GITHUB_WORKSPACE}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - tilesets:/tilesets
volumes:
  tilesets:
